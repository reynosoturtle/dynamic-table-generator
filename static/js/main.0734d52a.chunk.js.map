{"version":3,"sources":["components/table/TableHead.js","components/table/TableColumn.js","components/table/TableRow.js","components/table/TableBody.js","components/Table.js","components/utility/Dropdown.js","components/Sorter.js","components/Filter.js","App.js","serviceWorker.js","index.js"],"names":["TableHead","props","headers","map","header","key","TableColumn","display","data","undefined","TableRow","columns","index","TableBody","rows","row","_id","Table","Dropdown","options","value","selected","onChange","e","setter","target","Sorter","sortOption","setSortOption","orderOptions","orderOption","setOrderOption","Filter","filterOptions","filterOption","setFilterOption","processData","processed","object","forEach","type","find","hasOwnProperty","sorted","sortData","filterData","getNumberFromSpecialString","string","noSpecialCharacters","replace","Number","order","item","substr","arr","sort","a","b","sortSpecialCharacter","toLowerCase","localeCompare","sortString","regularSort","filter","App","useState","extracted","obj","array","Object","keys","concat","Array","from","Set","getUniqueHeaders","TestData","dataList","setDataList","console","table","useEffect","log","className","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0734d52a.chunk.js","sourcesContent":["import React from 'react'\n\nconst TableHead = (props) => {\n    let headers = props.headers.map(header => <th key={header}>{header}</th>)\n    return (\n        <thead>\n            <tr>\n                {headers}\n            </tr>\n        </thead>\n    );\n}\n\nexport default TableHead","import React from 'react'\n\nconst TableColumn = (props) => {\n    let display = props.data\n    if (typeof props.data === 'boolean') {\n        display = props.data ? 'True' : 'False'\n    } else if (props.data === undefined || props.data === null || props.data === '') {\n        display = 'N/A'\n    }\n\n    return (\n        <td>\n            {display}\n        </td>\n    );\n}\n\nexport default TableColumn","import React from 'react'\nimport TableColumn from './TableColumn'\n\nconst TableRow = (props) => {\n    let columns = props.headers.map((header, index) => <TableColumn key={index} data={props.data[header]} />)\n    return (\n        <tr>\n            {columns}\n        </tr>\n    );\n}\n\nexport default TableRow","import React from 'react'\nimport TableRow from './TableRow.js'\n\nconst TableBody = (props) => {\n    let rows = props.data.map(row => {\n        return <TableRow key={row._id} headers={props.headers} data={row} />\n    })\n    return (\n        <tbody>\n            {rows}\n        </tbody>\n    );\n}\n\nexport default TableBody","import React from 'react'\nimport TableHead from './table/TableHead'\nimport TableBody from './table/TableBody'\n\nconst Table = (props) => {\n    return (\n        <table>\n            <TableHead headers={props.headers} />\n            <TableBody headers={props.headers} data={props.data} />\n        </table>\n    );\n}\n\nexport default Table","import React from 'react'\n\nconst Dropdown = (props) => {\n    let options = props.headers.map((header, index) => <option key={index} value={header}>{header}</option>)\n\n    return (\n        <select selected={props.value} onChange={(e) => props.setter(e.target.value)}>\n            {options}\n        </select>\n    );\n}\n\nexport default Dropdown","import React from 'react'\nimport Dropdown from './utility/Dropdown'\n\nconst Sorter = (props) => {\n\n    return (\n        <>\n            Sort by: <Dropdown headers={props.headers} value={props.sortOption} setter={props.setSortOption} /> in\n            <Dropdown headers={props.orderOptions} value={props.orderOption} setter={props.setOrderOption} /> order <br />\n        </>\n    );\n}\n\nexport default Sorter","import React from 'react'\nimport Dropdown from './utility/Dropdown'\n\nconst Filter = (props) => {\n\n    return (\n        <>\n            Filter by: <Dropdown headers={props.filterOptions} value={props.filterOption} setter={props.setFilterOption} /> in\n        </>\n    );\n}\n\nexport default Filter","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Table from './components/Table.js'\nimport Sorter from './components/Sorter.js'\nimport Filter from './components/Filter.js'\nimport TestData from './configs/test.json'\n\nconst processData = ({ data, headers }, sortOption, orderOption, filterOption) => {\n  let processed = data.map(object => {\n    headers.forEach(header => {\n      let type = typeof data.find(object => object[header] !== undefined)[header]\n      if (!object.hasOwnProperty(header)) {\n        switch (type) {\n          case 'number':\n            object[header] = undefined\n            break\n          case 'boolean':\n            object[header] = null\n            break\n          case 'string':\n            object[header] = ''\n            break\n          default:\n            break\n        }\n      }\n    })\n\n    return object\n  })\n\n  let sorted = sortData(sortOption, processed, orderOption)\n  let filtered = filterData(sorted, filterOption)\n  return filtered\n}\n\nconst getUniqueHeaders = (data) => {\n  let extracted = []\n  data.forEach(obj => {\n    let array = Object.keys(obj)\n    extracted = extracted.concat(array)\n  })\n\n  return Array.from(new Set(extracted))\n}\n\n// Sort string, case-insensitive\nconst sortString = (key, arr, order) => {\n  return arr.sort(function (a, b) {\n    if (a[key] === '') {\n      return 1\n    } else if (b[key] === '') {\n      return -1\n    } else {\n      return order === 'asc'\n        ? a[key].toLowerCase().localeCompare(b[key].toLowerCase())\n        : b[key].toLowerCase().localeCompare(a[key].toLowerCase())\n    }\n  })\n}\n\n// Sort SpecialCharacter String\nconst getNumberFromSpecialString = (string) => {\n  let noSpecialCharacters = string.replace(/[^0-9a-zA-Z.]/g, '')\n  return Number(noSpecialCharacters)\n}\n\nconst sortSpecialCharacter = (key, arr, order) => {\n  return arr.sort(function (a, b) {\n    if (a[key] === '') {\n      return 1\n    } else if (b[key] === '') {\n      return -1\n    } else {\n      return order === 'asc'\n        ? getNumberFromSpecialString(a[key]) - getNumberFromSpecialString(b[key])\n        : getNumberFromSpecialString(b[key]) - getNumberFromSpecialString(a[key])\n    }\n  })\n}\n\n// Sort number or boolean\nconst regularSort = (key, arr, order) => {\n  return arr.sort(function (a, b) {\n    if (a[key] === null || a[key] === undefined) {\n      return 1\n    } else if (b[key] === null || b[key] === undefined) {\n      return -1\n    } else {\n      return order === 'asc'\n        ? a[key] - b[key]\n        : b[key] - a[key]\n    }\n  })\n}\n\nconst sortData = (key, data, order) => {\n  let item = data.find(object => object[key] !== undefined && object[key] !== null)[key]\n\n  if (typeof item === 'string') {\n    if (item.substr(0, 1) === '$' || item.substr === '+') {\n      // SpecialCharacter string\n      return sortSpecialCharacter(key, data, order)\n    } else {\n      // Regular string\n      return sortString(key, data, order)\n    }\n  } else if (typeof item === 'number' || typeof item === 'boolean') {\n    // Number or boolean\n    let sorted = regularSort(key, data, order)\n    return sorted\n  }\n}\n\nconst filterData = (data, filterOption) => {\n  if (filterOption === 'all') {\n    return data\n  } else {\n    return data.filter(object => {\n      return object[filterOption] !== null && object[filterOption] !== '' && object[filterOption] !== undefined\n    })\n  }\n}\n\nconst App = () => {\n  const [headers, setHeaders] = useState(getUniqueHeaders(TestData))\n  const [sortOption, setSortOption] = useState(headers[0])\n  const orderOptions = ['asc', 'des']\n  const [orderOption, setOrderOption] = useState(orderOptions[0])\n  const filterOptions = ['all', ...headers]\n  const [filterOption, setFilterOption] = useState(filterOptions[0])\n\n  const [dataList, setDataList] = useState(processData({ data: TestData, headers: headers }, sortOption, orderOption))\n  console.table(dataList)\n\n  useEffect(() => {\n    setDataList(processData({ data: TestData, headers: headers }, sortOption, orderOption, filterOption))\n    console.log('filter', filterOption)\n  }, [headers, sortOption, orderOption, filterOption])\n\n  return (\n    <div className=\"App\">\n      <Sorter headers={headers} sortOption={sortOption} setSortOption={setSortOption} orderOptions={orderOptions} orderOption={orderOption} setOrderOption={setOrderOption} />\n      <Filter filterOptions={filterOptions} filterOption={filterOption} setFilterOption={setFilterOption} />\n      <Table data={dataList} headers={headers} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}